<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qcc.spzx.product.mapper.ProductSkuMapper">

    <sql id="columns">
        id, sku_code, sku_name, product_id, thumb_img,
        sale_price, market_price, cost_price,
        stock_num, sale_num, sku_spec, weight, volume, status,
        create_time, update_time, is_deleted
    </sql>

    <sql id="columns_ps">
        ps.id, ps.sku_code, ps.sku_name, ps.product_id, ps.thumb_img,
        ps.sale_price, ps.market_price, ps.cost_price,
        ps.stock_num, ps.sale_num, ps.sku_spec, ps.weight, ps.volume, ps.status,
        ps.create_time, ps.update_time, ps.is_deleted
    </sql>

<!--    List<ProductSku> selectProductSkuBySale();-->
    <select id="selectProductSkuBySale" resultType="com.qcc.spzx.model.entity.product.ProductSku">
        select <include refid="columns_ps"></include>
        from product_sku ps
        inner join product p on p.id = ps.product_id
        where p.status = 1 and p.is_deleted = 0 and ps.is_deleted = 0
        order by ps.sale_num desc
        limit 10
    </select>

<!--    List<ProductSku> findByPage(ProductSkuDto productSkuDto);-->
    <select id="findByPage" resultType="com.qcc.spzx.model.entity.product.ProductSku">
        select <include refid="columns_ps"></include>
        from product_sku ps
        left join product p on p.id = ps.product_id
        <where>
            <if test="keyword != null and keyword != ''">
                and ps.sku_name like CONCAT('%',#{keyword},'%')
            </if>
            <if test="brandId != null">
                and p.brand_id = #{brandId}
            </if>
            <if test="category1Id != null">
                and p.category1_id = #{category1Id}
            </if>
            <if test="category2Id != null">
                and p.category2_id = #{category2Id}
            </if>
            <if test="category3Id != null">
                and p.category3_id = #{category3Id}
            </if>
            and p.status = 1
            and ps.is_deleted = 0
            and p.is_deleted = 0
        </where>
        <if test="order == 1">
            order by ps.sale_num desc
        </if>
        <if test="order == 2">
            order by ps.sale_price asc
        </if>
        <if test="order == 3">
            order by ps.sale_price desc
        </if>
    </select>

<!--    ProductSku getById(Long skuId);-->
    <select id="getById" resultType="com.qcc.spzx.model.entity.product.ProductSku">
        select <include refid="columns"></include>
        from product_sku
        where id = #{skuId}
    </select>

<!--    List<ProductSku> findByProductId(Long productId);-->
    <select id="findByProductId" resultType="com.qcc.spzx.model.entity.product.ProductSku">
        select <include refid="columns"></include>
        from product_sku
        where product_id = #{productId}
    </select>
</mapper>
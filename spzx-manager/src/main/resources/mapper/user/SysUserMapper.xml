<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qcc.spzx.manager.mapper.SysUserMapper">
    <sql id="column">
        id, username userName, password, name, phone, avatar, description, status, create_time, update_time, is_deleted
    </sql>

<!--    void save(SysUser sysUser);-->
    <insert id="save">
        insert
        into sys_user(id, username, password, name, phone, avatar, description, status)
        values(#{id}, #{userName}, #{password}, #{name}, #{phone}, #{avatar}, #{description}, #{status})
    </insert>

<!--    void update(SysUser sysUser);-->
    <update id="update">
        update sys_user
        set
        <if test="userName != null and userName != ''">
            username = #{userName},
        </if>
        <if test="name != null and name != ''">
            name = #{name},
        </if>
        <if test="phone != null and phone != ''">
            phone = #{phone},
        </if>
        <if test="description != null and description != ''">
            description = #{description},
        </if>
        <if test="status != null and status != ''">
            status = #{status},
        </if>
        update_time = now()
        where id = #{id}
    </update>

<!--    void delete(Long userId);-->
    <update id="delete">
        update sys_user
        set is_deleted = 1
        where id = #{userId}
    </update>

    <!--    SysUser selectUserInfoByUserName(String userName);-->
    <select id="selectUserInfoByUserName" resultType="com.qcc.spzx.model.entity.system.SysUser">
        select <include refid="column"/>
        from sys_user
        where username = #{username} and is_deleted = 0
    </select>

    <!--    List<SysUser> findByPage(SysUserDto sysUserDto);-->
    <select id="findByPage" resultType="com.qcc.spzx.model.entity.system.SysUser">
        select <include refid="column"/>
        from sys_user
        <where>
            is_deleted = 0
            <if test="keyword != null and keyword != ''">
                and username like concat('%', #{keyword}, '%')
            </if>
            <if test="createTimeBegin != null and createTimeBegin != ''">
                and create_time >= #{createTimeBegin}
            </if>
            <if test="createTimeEnd != null and createTimeEnd != ''">
                and create_time &lt;= #{createTimeEnd}
            </if>
        </where>
        order by id desc
    </select>
</mapper>
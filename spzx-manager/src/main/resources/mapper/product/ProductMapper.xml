<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qcc.spzx.manager.mapper.ProductMapper">

    <sql id="columns">
        id, name, brand_id, category1_id, category2_id, category3_id, unit_name,
            slider_urls, spec_value, status, audit_status, audit_message,
            create_time, update_time, is_deleted
    </sql>

    <sql id="columns_findByPage">
        p.id, p.name, p.brand_id, p.category1_id, p.category2_id, p.category3_id, p.unit_name,
            p.slider_urls, p.spec_value, p.status, p.audit_status, p.audit_message,
            p.create_time, p.update_time, p.is_deleted,
            b.name brandName,
            c1.name category1Name,
            c2.name category2Name,
            c3.name category3Name
    </sql>

<!--    void save(Product product);-->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert
        into product(<include refid="columns"></include>)
        values(#{id}, #{name}, #{brandId}, #{category1Id}, #{category2Id}, #{category3Id},
               #{unitName}, #{sliderUrls}, #{specValue}, #{status}, #{auditStatus}, #{auditMessage},
               now(), now(), 0)
    </insert>

<!--    void updateById(Product product);-->
    <update id="updateById">
        update product
        set
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="brandId != null and brandId != ''">
                brand_id = #{brandId},
            </if>
            <if test="category1Id != null and category1Id != ''">
                category1_id = #{category1Id},
            </if>
            <if test="category2Id != null and category2Id != ''">
                category2_id = #{category2Id},
            </if>
            <if test="category3Id != null and category3Id != ''">
                category3_id = #{category3Id},
            </if>
            <if test="unitName != null and unitName != ''">
                unit_name = #{unitName},
            </if>
            <if test="sliderUrls != null and sliderUrls != ''">
                slider_urls = #{sliderUrls},
            </if>
            <if test="specValue != null and specValue != ''">
                spec_value = #{specValue},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="auditStatus != null and auditStatus != ''">
                audit_status = #{auditStatus},
            </if>
            <if test="auditMessage != null and auditMessage != ''">
                audit_message = #{auditMessage},
            </if>
            update_time = now()
            where id = #{id}

    </update>

<!--    void deleteById(Long id);-->
    <update id="deleteById">
        update product
        set is_deleted = 1, update_time = now()
        where id = #{id}
    </update>

    <!--    List<Product> findByPage(ProductDto productDto);-->
    <select id="findByPage" resultType="com.qcc.spzx.model.entity.product.Product">
        select <include refid="columns_findByPage"></include>
        from product p
            inner join brand b on b.id = p.brand_id
            inner join category c1 on c1.id = p.category1_id
            inner join category c2 on c2.id = p.category2_id
            inner join category c3 on c3.id = p.category3_id
        <where>
            <if test="brandId != null and brandId != ''">
                and brand_id = #{brandId}
            </if>
            <if test="category1Id != null and category1Id != ''">
                and category1_id = #{category1Id}
            </if>
            <if test="category2Id != null and category2Id != ''">
                and category2_id = #{category2Id}
            </if>
            <if test="category3Id != null and category3Id != ''">
                and category3_id = #{category3Id}
            </if>
            and p.is_deleted = 0
        </where>
        order by p.id desc
    </select>

<!--    Product getProductById(Long id);-->
    <select id="getProductById" resultType="com.qcc.spzx.model.entity.product.Product">
        select <include refid="columns_findByPage"></include>
        from product p
            inner join brand b on b.id = p.brand_id
            inner join category c1 on c1.id = p.category1_id
            inner join category c2 on c2.id = p.category2_id
            inner join category c3 on c3.id = p.category3_id
        where p.id = #{id} and p.is_deleted = 0
    </select>
</mapper>